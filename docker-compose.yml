version: '3.8'

services:
  typesense:
    image: typesense/typesense:0.25.2
    restart: unless-stopped
    command: [
      "--data-dir", "/data",
      "--api-key", "${TYPESENSE_API_KEY:-xyz}",
      "--enable-cors",
      "--log-level", "INFO"
    ]
    ports:
      - "8108:8108"
    volumes:
      - typesense-data:/data
    environment:
      - TYPESENSE_API_KEY=${TYPESENSE_API_KEY:-xyz}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8108/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: PostgreSQL for advanced state management
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: vectorpenter
      POSTGRES_USER: vectorpenter
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-vectorpenter}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vectorpenter"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Optional: Redis for caching and session management
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  typesense-data:
    driver: local
  postgres-data:
    driver: local
  redis-data:
    driver: local
